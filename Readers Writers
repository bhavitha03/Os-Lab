#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>


sem_t mutex;
sem_t db;
int readercount = 0;


pthread_t reader1, reader2, writer1, writer2;


void *reader(void *);
void *writer(void *);


int main() {
    sem_init(&mutex, 0, 1);
    sem_init(&db, 0, 1);


    pthread_create(&reader1, NULL, reader, "1");
    pthread_create(&reader2, NULL, reader, "2");
    pthread_create(&writer1, NULL, writer, "1");
    pthread_create(&writer2, NULL, writer, "2");


    pthread_join(reader1, NULL);
    pthread_join(reader2, NULL);
    pthread_join(writer1, NULL);
    pthread_join(writer2, NULL);


    sem_destroy(&mutex);
    sem_destroy(&db);


    return 0;
}


void *reader(void *p) {
    sem_wait(&mutex);
    readercount++;
    if (readercount == 1) {
        sem_wait(&db);
    }
    sem_post(&mutex);


    printf("Reader %s is Reading\n", (char *)p);


    sem_wait(&mutex);
    readercount--;
    if (readercount == 0) {
        sem_post(&db);
    }
    sem_post(&mutex);


    return NULL;
}


void *writer(void *p) {
    sem_wait(&db);
    printf("Writer %s is writing\n", (char *)p);
    sem_post(&db);


    return NULL;
}
